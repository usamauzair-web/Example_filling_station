// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"*
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                   BigInt           @id @default(autoincrement())
  userName             String           @unique @db.VarChar(255)
  nic                  String?          @db.VarChar(255)
  userRole             Int              @default(1)
  cashInHand           Decimal          @default(0)
  createdVenders       venders[]        @relation("venderCreatedUser")
  updatedVenders       venders[]        @relation("venderUpdatedUser")
  createdCustomers     customers[]      @relation("customerCreatedUser")
  updatedCustomers     customers[]      @relation("customerUpdatedUser")
  createdTanks         tanks[]          @relation("tankCreateUser")
  updatedTanks         tanks[]          @relation("tankUpdateUser")
  createdItems         items[]          @relation("itemCreateUser")
  updatedItems         items[]          @relation("itemUpdateUser")
  createPumpMachine    pumpMachines[]   @relation("pumpMachinesCreateUser")
  updatePumpMachine    pumpMachines[]   @relation("pumpMachinesUpdateUser")
  createPumpOperators  pumpOperators[]  @relation("pumpOperatorsCreateUser")
  updatePumpOperators  pumpOperators[]  @relation("pumpOperatorsUpdateUser")
  updateWareHouses     wareHouses[]     @relation("wareHousesUpdateUser")
  branches             branches[]
}

model venders {
  id            BigInt   @id @default(autoincrement())
  venderName   String   @db.VarChar(255)
  address       String?
  email         String?  @db.VarChar(255)
  phone         String?  @db.VarChar(255)
  balance       Decimal  @default(0)
  createdUserId BigInt
  updatedUserId BigInt
  createdBy     users    @relation("venderCreatedUser", fields: [createdUserId], references: [id])
  updatedBy     users    @relation("vendrUpdatedUser", fields: [updatedUserId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
}

model customers {
  id             BigInt   @id @default(autoincrement())
  customerName   String   @db.VarChar(255)
  address        String?
  phone          String?  @db.VarChar(255)
  email          String?  @db.VarChar(255)
  nic            String?  @db.VarChar(255)
  customerNature Int?
  balance        Decimal? @default(0)
  vehicleNo      String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  createdUserId  BigInt
  updatedUserId  BigInt
  createdBy      users    @relation("customerCreatedUser", fields: [createdUserId], references: [id])
  updatedBy      users    @relation("customerUpdatedUser", fields: [updatedUserId], references: [id])
  sales          sales[]
}

model branches {
  id         BigInt   @id @default(autoincrement())
  branchName String   @db.VarChar(255)
  phone      String?  @db.VarChar(255)
  address    String?
  user       users    @relation(fields: [usersId], references: [id])
  usersId    BigInt
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model sales {
  itemId      BigInt       @id @default(autoincrement())
  invoiceNo   BigInt
  date        DateTime     @default(now())
  customerId  BigInt   
  pumpId      BigInt  
  qty         Int          @default(0)
  value       Int          @default(0)
  refNo       BigInt     
  tax         Int          @default(0)
  description String?      @db.VarChar(255)
  cash        Int    
  customer    customers    @relation(fields: [customerId], references: [id])
  pumpMachine pumpMachines @relation(fields : [pumpId], references:[id])
}

model tanks {
  id             BigInt         @id @default(autoincrement())
  name           String         @db.VarChar(255)
  remainQty      Decimal? 
  createdUserId  BigInt
  updatedUserId  BigInt
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now())
  createdBy      users          @relation("tankCreatedUser", fields: [createdUserId], references: [id])
  updatedBy      users          @relation("vendrUpdatedUser", fields: [updatedUserId], references: [id])
  itemId         BigInt       
  item           items          @relation(fields: [itemsId], references: [id])
  updatedAt      DateTime       @default(now())
  refills        refills[]
  pumpMachine    pumpMachines[]
  tankDetails    tankDetails[]
  wastage        wastages[]
}

model refill {
  id           BigInt        @id @default(autoincrement())
  refillAmount Decimal       @default(0)
  date         DateTime      @default(now())
  cost         Decimal       @default(0)
  tank         tanks         @relation(fields: [tanksId], references: [id])
  tanksId      BigInt
  updatedAt    DateTime      @default(now())
}

model tankDetails {
  id              BigInt        @id @default(autoincrement())
  tanksId         BigInt
  date            DateTime      @default(now())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
  cost            Decimal       @default(0)
  sellingPrice    Decimal       
  liters          Decimal?
  tank            tanks        @relation(fields:[tanksId], references: [id])
}

model wastage {
  id              BigInt        @id @default(autoincrement())
  date            DateTime      @default(now())
  createdAt       DateTime      @default(now())
  cost            Decimal       @default(0)
  liters          Decimal?
  tanksId         BigInt
  actualMeter     Decimal       @default(0)
  tank            tanks         @relation(fields:[tanksId], references: [id])
}

model pumpMachines {
  id               BigInt        @id @default(autoincrement())
  pumpName         String         @db.VarChar(255)
  pumpOperatorId   BigInt 
}

model pumpOperators {
  id               BigInt         @id @default(autoincrement())
  name             String         @db.VarChar(255)
  address          String?
  phoneNo          String?        @db.VarChar(255)
  nic              String?        @db.VarChar(255)
  balance          Decimal?       @default(0)
}

model pumpMachineDetails {

    id              BigInt         @id @default(autoincrement())
    pumpOperatorId  BigInt 
    pumpMachineId   BigInt
    startMeter      Decimal        @default(0)
    endMeter        Decimal        @default(0)
    date            DateTime       @default(now())
    amount          Decimal        @default(0)

}

model items {

     id              BigInt         @id @default(autoincrement())
     itemName        String         @db.VarChar(255)
     qty             Int?           @default(0)
     max             Int?           @default(0)
     min             Int?           @default(0)
     cost            Decimal        @default(0)
     measurementType Int?
     sellingPrice    Decimal        @default(0)
     editable        Boolean
     
}